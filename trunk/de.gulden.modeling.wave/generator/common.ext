/*
 * WAVE - Web Application Visual Environment
 * A Graphical Modeling Framework (GMF) Plugin for Eclipse
 * Copyright Jens Gulden, 2009, mail@jensgulden.de
 * Licensed under the GNU General Public License (GPL)
 */
import wave;

extension org::eclipse::xtend::util::stdlib::globalvar;

Model model( ModelMember this ) :
	this.isModel() ? this : ((ModelMember)this.eContainer).model();

cached String basePrefix( Model this ) :
	(this.projectLayout == EnumProjectLayout::APPLICATION) ? (this.name + "/application") : this.name ;

cached String classPrefix( Model this ) :
	(this.projectLayout == EnumProjectLayout::APPLICATION) ? (this.basePrefix() + "/packages") : "" ;

String sourceFileName( ModelMember this ) :
	null; // fallback for types to ignore

// abstract, to be implemented by target language extension
String sourceBaseFolder( ModelMember this ):
	null;

// abstract/extendable, to be extended by target language extension
//String codeName( Classifier this ) : this.name; 

String codeName( Classifier this ) :
	targetPHP() ? 
	(this.codeNameBase() + this.name)
	:
	this.name;

String codeNameBase( Classifier this ) : this.package().name.toFirstUpper()+"_Model_"; 

String sourceFileSuffix( ModelMember this ) :
	targetPHP() ? 
	"php" 
	: 
	"java";

String sourceFileName( OOPClassifier this ) :
	targetPHP() ?
	this.model().classPrefix().concat("/", this.package().path().concat("/", "models/")) + this.name + ".php"
	:
	( this.model().basePackage.concat( ".", this.package().qualifiedName()) ).replaceAll("[.]", "/") + "/" + this.name + "." + this.sourceFileSuffix();

//String sourceFileName( Enumeration this ) :
//	this.model().basePrefix().concat("/", this.package().path().concat("/", "models/")) + this.name + ".php";

String sourceFileName( Controller this ) :
	this.model().basePrefix() + "/controllers/" + this.name + ".php";

String sourceFileName( View this ) :
	this.model().basePrefix() + "/views/scripts/" + ((Controller)this.eContainer).name.toLowerCase() + "/" + this.name + ".php";

String sourceFileName( Include this ) :
	this.model().classPrefix().concat("/", this.package().path().concat("/", this.name));
	
String sourceFileName( StyleSheet this ) :
	this.model().name + "/public/styles/" + this.name;
	
String sourceFileName( AssociationRelationship this ) : // bidirectional n-to-m
	targetPHP() ?
	this.model().classPrefix().concat("/", this.a.package().path().concat("/", "models/DbTable/")) + "Relationship" + this.name.toFirstUpper() + ".php"
	:
	null;
	
//String sourceFileName( Enumeration this ) :
//	( this.model().basePackage.concat( ".", this.package().qualifiedName()) ).replaceAll("[.]", "/") + "/" + this.name + "." + this.sourceFileSuffix();

// overwrite previous declaration	
Package package( ModelMember this ) :
				targetPHP() ?
				( (Package)this.eContainer )
				:
				( ( this.eContainer.metaType == Model ) ? null : ((Package)this.eContainer) );

String langstringsPath( Model this ) : 
				this.sourceBaseFolder() + "/lang/langstrings.inc.php";

int countArrayDimensions( String this ) : JAVA de.gulden.modeling.wave.util.WaveUtil.countArrayDimensions(java.lang.String);

boolean isArrayType( String this ) : this.countArrayDimensions() > 0;

String typeCastFunction( String this ) : (this == "integer") ? "intval" : (
								 (this == "boolean") ? "boolval" : ( 
								 (this == "float") ? "floatval" : ( 
								 (this == "double") ? "douleval" : 
								 "" ) ) ); 

String prepareCode( String this ) : JAVA de.gulden.modeling.wave.util.WaveUtil.prepareCode(java.lang.String);

String prepareCode( Operation this ) : JAVA de.gulden.modeling.wave.util.WaveUtil.prepareCode(de.gulden.modeling.wave.Operation);

String prepareCode( Void this ) : "";

String translateType( String this ) : ((this == "Text") ? "String" : this);

String qualifiedName( Classifier this ) : (this.package().isModel()) ? this.name : (this.package().qualifiedName() + "." +this.name); 

String qualifiedName( Package this ) : (this.isModel()) ? this.name : (this.package().qualifiedName() + "." +this.name); 

String qualifiedName( Void this ) : ""; 

String qualify( Classifier this, Classifier q ) : 
				(this.package() == q.package()) ? q.name : q.qualifiedName();

String path( Package this ) : ( this.is() && ! this.isModel() ) ? this.qualifiedName().replaceAll("[.]", "/") : "";

String getter( String this ) : "get"+this.toFirstUpper();

String getter( Attribute this ) : this.name.getter();

String setter( String this ) : "set"+this.toFirstUpper();

String setter( Attribute this ) : this.name.setter();

boolean isPrimitiveType( String this ) : ((this == "integer") || (this == "string") || (this == "boolean") || (this == "text") || (this == "float") || (this == "double"));

boolean isIntegerType( String this ) : ((this == "integer") || (this == "boolean"));

boolean isFloatType( String this ) : ((this == "float") || (this == "double"));

boolean is( String this ) : 
				((this != null) && ( this != "" ));

boolean is( Object this ) : 
				((this != null) && ( this.toString().is() ));

boolean has( Collection this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.has(java.util.Collection);

String concat(String this, String delim, String other) : 
				(! this.is()) ? other : ( (! other.is()) ? this : ( this + delim + other ) );

String without(String this, String remove) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.without(java.lang.String,java.lang.String);

//String ownerPackageName( ModelMember this ) : ( this.ownerPackage() != null ) ? this.ownerPackage().name : "";

String visibility( OOPClassifier this ) : 
	visibility(this.visibility);
				 
String visibility( ClassifierMember this ) :
	visibility(this.visibility);

String visibility( EnumVisibility this ) :
	targetPHP() ?
	""
	: 
	( ( this == EnumVisibility::PACKAGE ) ? " " : this.toString().toLowerCase()+" ");

//String package( ModelMember this ) :
//				((Model)this.eContainer).basePackage.concat(".", this.ownerPackageName());				

cached Collection[Classifier] extends( Classifier this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getExtended(de.gulden.modeling.wave.Classifier);

cached Collection[Classifier] implements( Classifier this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getImplemented(de.gulden.modeling.wave.Classifier);

cached Collection[AssociationRelationship] associations( OOPClassifier this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getAssociations(de.gulden.modeling.wave.OOPClassifier);

cached Collection[Actor] associatedActors( Usecase this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getAssociatiatedActors(de.gulden.modeling.wave.Usecase);

cached Collection[ModelMember] depends( ModelMember this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getDepends(de.gulden.modeling.wave.ModelMember);

cached Collection[Attribute] allAttributes( Classifier this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getAllAttributes(de.gulden.modeling.wave.Classifier);

cached Collection[AssociationRelationship] allAssociations( OOPClassifier this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getAllAssociations(de.gulden.modeling.wave.OOPClassifier);

cached Collection[AssociationRelationship] allBidirectionalNtoMAssociations( OOPClassifier this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getBidirectionalNtoMAssociations(de.gulden.modeling.wave.OOPClassifier);

cached Collection[AssociationRelationship] allOutgoingSinglevalAssociations( OOPClassifier this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getAllOutgoingSinglevalAssociations(de.gulden.modeling.wave.OOPClassifier);

cached Collection[AssociationRelationship] allIngoingMultivalAssociations( OOPClassifier this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getAllIngoingMultivalAssociations(de.gulden.modeling.wave.OOPClassifier);

cached Collection[AssociationRelationship] allOutgoingMultivalAssociations( OOPClassifier this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getAllOutgoingMultivalAssociations(de.gulden.modeling.wave.OOPClassifier);

cached Collection[AssociationRelationship] allOutgoingAssociations( OOPClassifier this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getAllOutgoingAssociations(de.gulden.modeling.wave.OOPClassifier);

cached Collection[ActionToViewTransition] outgoingTransitions( Action this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getOutgoingTransitions(de.gulden.modeling.wave.Action);

cached Collection[ViewTransition] outgoingFlows( ControllerMemberExecutable this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getOutgoingFlows(de.gulden.modeling.wave.ControllerMemberExecutable);

//cached Collection[ModelMember] packageMembers( Package this ) : 
//				JAVA de.gulden.modeling.wave.util.WaveUtil.getPackageMembers(de.gulden.modeling.wave.Package);

cached Collection[StyleSheet] styleSheets( Model this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getStyleSheets(de.gulden.modeling.wave.Model);

cached Collection[UsecaseSubsystem] usecaseSubsystems( Model this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getUsecaseSubsystems(de.gulden.modeling.wave.Model);

Collection[Enumeration] enumerations( Model this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getEnumerations(de.gulden.modeling.wave.Model);

cached Collection[ViewTransition] incomingFlows( ControllerMember this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getIncomingFlows(de.gulden.modeling.wave.ControllerMember);

boolean contains( String this, String pattern ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.contains(java.lang.String, java.lang.String);

boolean isNavigable( AssociationRelationship this, OOPClassifier cls ) : 
				this.isBidirectional() 
				|| ( cls.isOppositeEndA(this) && this.direction.toString() == "<--") // TODO cleaner
				|| ( cls.isOppositeEndB(this) && this.direction.toString() == "-->");

boolean isOppositeEndA( OOPClassifier this, AssociationRelationship assoc ) : 
				(assoc.b == this) ? true : false;

boolean isOppositeEndB( OOPClassifier this, AssociationRelationship assoc ) : 
				(assoc.a == this) ? true : false;

OOPClassifier opposite( AssociationRelationship this, OOPClassifier cls ) :
				 cls.isOppositeEndA(this) ? this.a : this.b;

boolean isBidirectional( AssociationRelationship assoc ) : 
				(assoc.direction.toString() == "<-->"); // TODO cleaner

boolean isBidirectionalNToM( AssociationRelationship this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.isBidirectionalNToM(de.gulden.modeling.wave.AssociationRelationship);
				//(this.isBidirectional() && this.multiplicityA.toString().contains("*") && this.multiplicityB.toString().contains("*")); // TODO cleaner 

cached String outgoingName( AssociationRelationship assoc, OOPClassifier this ) : // TODO constraint assoc.name != null, != "" 
				assoc.name + 
				( ( assoc.isBidirectional() && ( this == assoc.b ) ) ? "Reverse" : ""); 
				//( ( (assoc.name == null) || (assoc.name == "") || (assoc.isBidirectional() && ( this == assoc.b ) ) )
				//	? ( ( ( this.isOppositeEndA(assoc) ? assoc.a.name : assoc.b.name )).toFirstUpper() ) 
				//	: "" 
				//)).toFirstLower(); 

String outgoingName( OOPClassifier this, AssociationRelationship assoc ) : assoc.outgoingName(this); // legacy
 
cached String ingoingName( OOPClassifier this, AssociationRelationship assoc ) : 
				assoc.name + 
				( ( assoc.isBidirectional() && ( this == assoc.a ) ) ? "Reverse" : ""); 
				//( ( (assoc.name == null) || (assoc.name == "") || (assoc.isBidirectional() && ( this == assoc.a ) ) )
				//	? ( ( ( this.isOppositeEndB(assoc) ? assoc.a.name : assoc.b.name )).toFirstUpper() ) 
				//
				//	: "" 
				//)).toFirstLower(); 

OOPClassifier outgoingType( OOPClassifier this, AssociationRelationship assoc ) : 
				this.isOppositeEndA(assoc) ? assoc.a : assoc.b;

String outgoingMultiplicity( OOPClassifier this, AssociationRelationship assoc ) : 
				(this.isOppositeEndA(assoc) ? assoc.multiplicityA : assoc.multiplicityB).toString();

boolean isOutgoingMulti( OOPClassifier this, AssociationRelationship assoc ) : 
				this.outgoingMultiplicity(assoc).contains("*"); // TODO cleaner

boolean isOutgoingSingle( OOPClassifier this, AssociationRelationship assoc ) : 
				! this.isOutgoingMulti(assoc);

String ingoingMultiplicity( OOPClassifier this, AssociationRelationship assoc ) : 
				(this.isOppositeEndA(assoc) ? assoc.multiplicityB : assoc.multiplicityA).toString();

boolean isIngoingMulti( AssociationRelationship this, OOPClassifier cls ) : 
				cls.ingoingMultiplicity(this).contains("*"); // TODO cleaner

boolean isIngoingSingle( AssociationRelationship this,  OOPClassifier cls ) : 
				! this.isIngoingMulti(cls);

String taggedValue( ModelMember this, String key ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getTaggedValue(de.gulden.modeling.wave.ModelMember, java.lang.String);

Collection[String] taggedValues( ModelMember this, String key ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.getTaggedValues(de.gulden.modeling.wave.ModelMember, java.lang.String);

String setTaggedValue( ModelMember this, String key, String value ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.setTaggedValue(de.gulden.modeling.wave.ModelMember, java.lang.String, java.lang.String);

boolean definesOperation( Classifier this, String name ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.definesOperation(de.gulden.modeling.wave.Classifier, java.lang.String);

String removePluralS( String this ) : 
				//this; // deactivated 
				JAVA de.gulden.modeling.wave.util.WaveUtil.removePluralS(java.lang.String);

boolean isPersistent( AssociationRelationship this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.isPersistent(de.gulden.modeling.wave.AssociationRelationship);

Include getLayoutTemplateInclude( Controller this) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.getLayoutTemplateInclude(de.gulden.modeling.wave.Controller);

String layoutTemplate( Controller this ) : 
				/*this.relUrl() + */( (this.getLayoutTemplateInclude() != null) ? this.getLayoutTemplateInclude().urlPath() : getGlobalVar("layoutTemplate") );

String urlPath( Include this ) :
				this.urlPath.is() ? this.urlPath : ("/"+this.sourceFileName());

String relUrl( Classifier this ) :
				getGlobalVar("basePackage").toString().relUrl() + ((this.package() != null) ? (getGlobalVar("basePackage").toString().relUrl().is() ? "/" : "")+this.package().name.relUrl() : "");

String relUrl( String this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.relUrl(java.lang.String);
				
String relUrl( Void this ) : "";
				
String orNull( String this ) :
				this.is() ? this : "null";
				
String orNull( Object this ) :
				(this != null) ? this : "null";
				
String ifEmpty( Object this, String alt ) :
				this.is() ? this : alt;
				
String noNull( Object this ) :
				this.ifEmpty("");
				
//String label( EnumerationLiteral this ) :
//				this.label.is() ? this.label : this.name;

String labelCode( ModelMember this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.labelCode(de.gulden.modeling.wave.ModelMember);
				
String descriptionCode( ModelMember this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.descriptionCode(de.gulden.modeling.wave.ModelMember);
				
String guessName( ModelMember this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.guessName(java.lang.Object);
				
Object guessValue( Object this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.guessValue(java.lang.Object);

int labelIndex( Label this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.labelIndex(de.gulden.modeling.wave.Label);
				
String condition( Transition this ) :
				this.condition.is() ? this.condition : "true";

boolean isEnumerationType( String this ) : ((Collection)getGlobalVar("allEnumerations")).contains(this);

List join( List this, List other ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.join(java.util.List,java.util.List);

Collection sort( List this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.sort(java.util.List);

boolean hasHint( ModelMember this, String hintTag, String hintValue ) :
				this.taggedValues(hintTag).contains(hintValue);
				
//boolean hasTypeHint( ModelMember this, String hintValue ) :
//				this.hasHint("typeHint", hintValue);
				
//boolean hasWidgetHint( ModelMember this, String hintValue ) :
//				this.hasHint("widgetHint", hintValue);

List enumConstants( String this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.listEnumConstants(java.lang.String);

boolean isModel( ModelMember this ) :
				this.metaclass() == "de.gulden.modeling.wave.impl.ModelImpl";

boolean isController( ModelMember this ) :
				this.metaclass() == "de.gulden.modeling.wave.impl.ControllerImpl";

boolean isOOPClassifier( ModelMember this ) :
				this.metaclass() == "de.gulden.modeling.wave.impl.OOPClassifierImpl";

boolean isEnumeration( ModelMember this ) :
				this.metaclass() == "de.gulden.modeling.wave.impl.EnumerationImpl";

boolean isClass( ModelMember this ) :
				this.metaclass() == "de.gulden.modeling.wave.impl.ClassImpl";

boolean isInclude( ModelMember this ) :
				this.metaclass() == "de.gulden.modeling.wave.impl.IncludeImpl";

boolean isStyleSheet( ModelMember this ) :
				this.metaclass() == "de.gulden.modeling.wave.impl.StyleSheetImpl";

boolean isClassifier( ModelMember this ) :
				this.isController() || this.isClass() || this.isInterface() || this.isInclude() || this.isStyleSheet();

boolean isInterface( ModelMember this ) :
				this.metaclass() == "de.gulden.modeling.wave.impl.InterfaceImpl";

boolean isAction( ModelMember this ) :
				this.metaclass() == "de.gulden.modeling.wave.impl.ActionImpl";

boolean isView( ModelMember this ) :
				this.metaclass() == "de.gulden.modeling.wave.impl.ViewImpl";

boolean isPackage( ModelMember this ) :
				this.metaclass() == "de.gulden.modeling.wave.impl.PackageImpl";

boolean isAssociationRelationship( ModelMember this ) :
				this.metaclass() == "de.gulden.modeling.wave.impl.AssociationRelationshipImpl";

String metaclass( ModelMember this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.getClassname(java.lang.Object);
				
String flowName( ViewTransition this ) :
				(this.name.is() ? this.name : ("to"+this.target.name.toFirstUpper()));
				//(this.source.name.toFirstLower() + (this.name.is() ? this.name.toFirstUpper() : "To"+this.target.name.toFirstUpper()));
				
String flowLabelCode( ViewTransition this ) :
				(( ! this.name.is() ) && ( this.label == null )) ? this.target.labelCode() : this.labelCode();
				
View defaultView( Controller this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.defaultView(de.gulden.modeling.wave.Controller);

boolean useSecurity( Model this ) : this.usecaseSubsystems().has();

String untilFirstBlank( String this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.untilFirstBlank(java.lang.String);
				
String camelCaseToDashSeperated( String this ) :				
				JAVA de.gulden.modeling.wave.util.WaveUtil.camelCaseToDashSeperated(java.lang.String);
 				
boolean hasView ( Controller this, String name ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.hasView(de.gulden.modeling.wave.Controller, java.lang.String);
				
cached String signatureID( Operation this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.buildSignatureID(de.gulden.modeling.wave.Operation);

boolean parseCodeBlocks( String this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.parseCodeBlocks(java.lang.String);

boolean roundtripCode( Operation this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.roundtripCode(de.gulden.modeling.wave.Operation);

boolean roundtripInclude( Include this, String filename ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.roundtripInclude(de.gulden.modeling.wave.Include,java.lang.String);

boolean log( String this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.log(java.lang.String);

boolean fileExists( String this ) :
				JAVA de.gulden.modeling.wave.util.WaveUtil.fileExists(java.lang.String);
  
Collection flip( Collection this ) : 
				JAVA de.gulden.modeling.wave.util.WaveUtil.flip(java.util.Collection);

boolean isVoid( String this ) :
				(!this.is())||(this.trim().toLowerCase() == "void");

String defaultReturnValue( String this ) :
				switch ( this.trim().toLowerCase() ) {
					case "boolean": "false"
					case "int": "0"
					case "integer": "0"
					case "float": "0.0"
					case "double": "0.0"
					case "long": "0"
					default: "null"
				};

//EnumGeneratorTarget generatorTarget( ModelMember this ) :
//				( this == null ) ? EnumGeneratorTarget::NONE : this.model().generatorTarget ;

EnumGeneratorTarget generatorTarget( ) :
				getGlobalVar("generatorTarget");

boolean targetPHP( ) :
				let g = generatorTarget():
				(g == EnumGeneratorTarget::PHP5) || (g == EnumGeneratorTarget::ZEND);

// --- PHP ---

String sourceFormFileName( Class this, String name ) :
	this.model().classPrefix().concat("/", this.package().path().concat("/", "forms/")) + this.name + name.toLowerCase().toFirstUpper() + ".php";
	
String sourceMapperFileName( Class this ) :
	this.model().classPrefix().concat("/", this.package().path().concat("/", "models/DbTable/")) + this.name + "Mapper.php";
	
String sourceDbtableFileName( Class this ) :
	this.model().classPrefix().concat("/", this.package().path().concat("/", "models/DbTable/")) + this.name + ".php";
	

String dbtableName( Class this ) : this.codeNameBase()+"DbTable_"+this.name;

String mapperName( OOPClassifier this ) : this.codeNameBase()+"DbTable_"+this.name+"Mapper";

String formName( Class this ) : this.formBaseName()+this.name; 

String formBaseName( Class this ) : this.package().name.toFirstUpper()+"_Form_"; 

Widget getWidget( Class this, Attribute attr, String mode ) :
	//mode.is() ? ( this.findWidget(mode).is() ? this.findWidget(mode) : this.defaultWidget() ) : ( this.widgets.has() ? this.widgets.first() : this.defaultWidget());  
	mode.is() ? ( this.findWidget(attr, mode).is() ? this.findWidget(attr, mode) : attr.defaultWidget(mode) ) : attr.defaultWidget(mode);  

create WidgetAttribute defaultWidget( Attribute attr, String mode ) :
	this.setWidgetType(EnumWidgetType::DEFAULT) ->  
	(mode.toUpperCase() == "VIEW" || mode.toUpperCase()=="LIST") ? this.setReadOnly(true) : this;

Widget findWidget( Class this, Attribute attr, String mode ) :
	JAVA de.gulden.modeling.wave.util.WaveUtil.findWidget(de.gulden.modeling.wave.Class,de.gulden.modeling.wave.Attribute,java.lang.String);
	

String widgetTypeToZendFormElementType(Widget this) :
	(
		(this.widgetType == EnumWidgetType::SELECT) ? (
			this.multiChoice ? "multiselect"
							 : "select"
		) : 
		(
			(this.widgetType == EnumWidgetType::CHECKBOX) ? (
				this.multiChoice ? "multiCheckbox"
								 : "checkbox"
			) :
			(
				(this.widgetType == EnumWidgetType::RADIOBUTTON) ? (
					"radio"
				) :
				( 
					(this.widgetType == EnumWidgetType::TEXT) ? (
						this.multiLine ? "textarea"
									   : "text"
					) : 
					this.widgetType.toString().toLowerCase()
				)
			)
		)
	);
		
String toWidgetType(Widget this, String type) :
	((!this.widgetType.is()) || (this.widgetType==EnumWidgetType::DEFAULT)) 
	? this.defaultWidgetType(type) 
	: this.widgetTypeToZendFormElementType();
	
String defaultWidgetType(Widget this, String type) : 
	(type == "string") ? (this.multiLine ? "textarea" : "text")
  : ((type == "boolean") ? "checkbox"
  : ((type == "int") ? "text"
  : ((type.isEnumerationType()) ? "select" 
  : "text")));
  
Widget getWidget( AssociationRelationship this, Class cls, String mode ) :
	mode.is() ? 
	( this.findAssocWidget(cls, mode).is() ? 
		  this.findAssocWidget(cls, mode) 
		: this.defaultAssocWidget(cls, mode) 
	) 
	: this.defaultAssocWidget(cls, mode);  

create WidgetAssociation defaultAssocWidget( AssociationRelationship assoc, Class cls, String mode ) :
	//this.setResolveDisplayMode("list") ->
	(mode.toUpperCase() == "VIEW" || mode.toUpperCase()=="LIST") ? this.setReadOnly(true) : this;

Widget findAssocWidget( AssociationRelationship this, Class cls, String mode ) :
	JAVA de.gulden.modeling.wave.util.WaveUtil.findAssocWidget(de.gulden.modeling.wave.AssociationRelationship,de.gulden.modeling.wave.Class,java.lang.String);
	
String urlCode( Action this ) :
	urlCode(this, "array()");
				
String urlCode( Action this, String paramsCode ) :
	"url( array_merge( array('controller' => '"+((Controller)this.eContainer).name.without("Controller").toLowerCase()+"', 'action' => '"+this.name.without("Action").toFirstLower()+"'), "+paramsCode+" ), 'default', true )";

// --- OOP ---

String oopType( OOPClassifier this ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"/*"+this.name.translateType()+"*/"
					default:
						this.name.translateType() 
				};

String oopType( Attribute this ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"/*"+this.type.translateType()+"*/"
					default:
						this.type.translateType() 
				};

String oopType( Operation this ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"/*"+this.returnType.translateType()+"*/"
					default:
						this.returnType.translateType() 
				};

String oopType( String this ) :				
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"/*"+this+"*/"
					default:
						this 
				};

String oopVar( Attribute this ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"$"+this.name
					default:
						this.name 
				};

String oopVar( String this ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"$"+this
					default:
						this 
				};

String oopVarRef( String this ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"$"+this+"->"
					default:
						this+"."
				};

String oopVoid( ModelMember this ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"/*void*/"
					default:
						"void"
				};

String oopFunction( ModelMember this ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"function "
					default:
						""
				};

String oopThis( ModelMember this ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"$this"
					default:
						"this"
				};

String oopThisRef( ModelMember this ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"$this->"
					default:
						"this."
				};

String oopArray( Classifier this ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"/*Array*/"
					default:
						"List<"+this.name+">"
				};
				
String oopArrayType( Classifier this ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"array"
					default:
						"List<"+this.name+">"
				};

String oopArrayInitialValue( Classifier this ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"= array()"
					default:
						"= new ArrayList<"+this.name+">()"
				};

String oopIntType( ModelMember this ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"integer"
					default:
						"int"
				};

String oopInArrayCondition( String this, String localvar ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						"in_array("+localvar+", "+this+")"
					default:
						this+".contains("+localvar+")"
				};
				
String oopAddToArray( String this, String localvar ) :
				switch ( generatorTarget() ) {
					case EnumGeneratorTarget::PHP5: 
						this+"[] = "+localvar
					default:
						this+".add("+localvar+")"
				};
				


