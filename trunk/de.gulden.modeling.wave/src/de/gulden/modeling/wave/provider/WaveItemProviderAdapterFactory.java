/**
 * WAVE - Web Application Visual Environment
 * A Graphical Modeling Framework (GMF) Plugin for Eclipse
 * Copyright Jens Gulden, 2009, mail@jensgulden.de
 * Licensed under the GNU General Public License (GPL)
 *
 * $Id$
 */
package de.gulden.modeling.wave.provider;

import de.gulden.modeling.wave.util.WaveAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class WaveItemProviderAdapterFactory extends WaveAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public WaveItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Controller} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ControllerItemProvider controllerItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Controller}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createControllerAdapter() {
		if (controllerItemProvider == null) {
			controllerItemProvider = new ControllerItemProvider(this);
		}

		return controllerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.AssociationRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssociationRelationshipItemProvider associationRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.AssociationRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssociationRelationshipAdapter() {
		if (associationRelationshipItemProvider == null) {
			associationRelationshipItemProvider = new AssociationRelationshipItemProvider(this);
		}

		return associationRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Operation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationItemProvider operationItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Operation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationAdapter() {
		if (operationItemProvider == null) {
			operationItemProvider = new OperationItemProvider(this);
		}

		return operationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Action} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionItemProvider actionItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Action}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionAdapter() {
		if (actionItemProvider == null) {
			actionItemProvider = new ActionItemProvider(this);
		}

		return actionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.View} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ViewItemProvider viewItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.View}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createViewAdapter() {
		if (viewItemProvider == null) {
			viewItemProvider = new ViewItemProvider(this);
		}

		return viewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Attribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeItemProvider attributeItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Attribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeAdapter() {
		if (attributeItemProvider == null) {
			attributeItemProvider = new AttributeItemProvider(this);
		}

		return attributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.InheritanceRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InheritanceRelationshipItemProvider inheritanceRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.InheritanceRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInheritanceRelationshipAdapter() {
		if (inheritanceRelationshipItemProvider == null) {
			inheritanceRelationshipItemProvider = new InheritanceRelationshipItemProvider(this);
		}

		return inheritanceRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.RealizationRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RealizationRelationshipItemProvider realizationRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.RealizationRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRealizationRelationshipAdapter() {
		if (realizationRelationshipItemProvider == null) {
			realizationRelationshipItemProvider = new RealizationRelationshipItemProvider(this);
		}

		return realizationRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Model} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelItemProvider modelItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Model}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelAdapter() {
		if (modelItemProvider == null) {
			modelItemProvider = new ModelItemProvider(this);
		}

		return modelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Package} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PackageItemProvider packageItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Package}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPackageAdapter() {
		if (packageItemProvider == null) {
			packageItemProvider = new PackageItemProvider(this);
		}

		return packageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.DependencyRelationship} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DependencyRelationshipItemProvider dependencyRelationshipItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.DependencyRelationship}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDependencyRelationshipAdapter() {
		if (dependencyRelationshipItemProvider == null) {
			dependencyRelationshipItemProvider = new DependencyRelationshipItemProvider(this);
		}

		return dependencyRelationshipItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Class} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassItemProvider classItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Class}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassAdapter() {
		if (classItemProvider == null) {
			classItemProvider = new ClassItemProvider(this);
		}

		return classItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Interface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterfaceItemProvider interfaceItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Interface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterfaceAdapter() {
		if (interfaceItemProvider == null) {
			interfaceItemProvider = new InterfaceItemProvider(this);
		}

		return interfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.ActionToViewTransition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActionToViewTransitionItemProvider actionToViewTransitionItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.ActionToViewTransition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActionToViewTransitionAdapter() {
		if (actionToViewTransitionItemProvider == null) {
			actionToViewTransitionItemProvider = new ActionToViewTransitionItemProvider(this);
		}

		return actionToViewTransitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.TaggedValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TaggedValueItemProvider taggedValueItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.TaggedValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTaggedValueAdapter() {
		if (taggedValueItemProvider == null) {
			taggedValueItemProvider = new TaggedValueItemProvider(this);
		}

		return taggedValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Documentation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentationItemProvider documentationItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Documentation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentationAdapter() {
		if (documentationItemProvider == null) {
			documentationItemProvider = new DocumentationItemProvider(this);
		}

		return documentationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.ClassifierMember} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassifierMemberItemProvider classifierMemberItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.ClassifierMember}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassifierMemberAdapter() {
		if (classifierMemberItemProvider == null) {
			classifierMemberItemProvider = new ClassifierMemberItemProvider(this);
		}

		return classifierMemberItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Include} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IncludeItemProvider includeItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Include}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIncludeAdapter() {
		if (includeItemProvider == null) {
			includeItemProvider = new IncludeItemProvider(this);
		}

		return includeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.StyleSheet} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StyleSheetItemProvider styleSheetItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.StyleSheet}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStyleSheetAdapter() {
		if (styleSheetItemProvider == null) {
			styleSheetItemProvider = new StyleSheetItemProvider(this);
		}

		return styleSheetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.ViewTransition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ViewTransitionItemProvider viewTransitionItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.ViewTransition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createViewTransitionAdapter() {
		if (viewTransitionItemProvider == null) {
			viewTransitionItemProvider = new ViewTransitionItemProvider(this);
		}

		return viewTransitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Enumeration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumerationItemProvider enumerationItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Enumeration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumerationAdapter() {
		if (enumerationItemProvider == null) {
			enumerationItemProvider = new EnumerationItemProvider(this);
		}

		return enumerationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.EnumerationLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumerationLiteralItemProvider enumerationLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.EnumerationLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumerationLiteralAdapter() {
		if (enumerationLiteralItemProvider == null) {
			enumerationLiteralItemProvider = new EnumerationLiteralItemProvider(this);
		}

		return enumerationLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Dictionary} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DictionaryItemProvider dictionaryItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Dictionary}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDictionaryAdapter() {
		if (dictionaryItemProvider == null) {
			dictionaryItemProvider = new DictionaryItemProvider(this);
		}

		return dictionaryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Label} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LabelItemProvider labelItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Label}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLabelAdapter() {
		if (labelItemProvider == null) {
			labelItemProvider = new LabelItemProvider(this);
		}

		return labelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Langstring} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LangstringItemProvider langstringItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Langstring}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLangstringAdapter() {
		if (langstringItemProvider == null) {
			langstringItemProvider = new LangstringItemProvider(this);
		}

		return langstringItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.DatabaseTable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DatabaseTableItemProvider databaseTableItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.DatabaseTable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDatabaseTableAdapter() {
		if (databaseTableItemProvider == null) {
			databaseTableItemProvider = new DatabaseTableItemProvider(this);
		}

		return databaseTableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.UsecaseSubsystem} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UsecaseSubsystemItemProvider usecaseSubsystemItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.UsecaseSubsystem}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUsecaseSubsystemAdapter() {
		if (usecaseSubsystemItemProvider == null) {
			usecaseSubsystemItemProvider = new UsecaseSubsystemItemProvider(this);
		}

		return usecaseSubsystemItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Usecase} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UsecaseItemProvider usecaseItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Usecase}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUsecaseAdapter() {
		if (usecaseItemProvider == null) {
			usecaseItemProvider = new UsecaseItemProvider(this);
		}

		return usecaseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Actor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActorItemProvider actorItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Actor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActorAdapter() {
		if (actorItemProvider == null) {
			actorItemProvider = new ActorItemProvider(this);
		}

		return actorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Area} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AreaItemProvider areaItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Area}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAreaAdapter() {
		if (areaItemProvider == null) {
			areaItemProvider = new AreaItemProvider(this);
		}

		return areaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.ControllerMemberExecutable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ControllerMemberExecutableItemProvider controllerMemberExecutableItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.ControllerMemberExecutable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createControllerMemberExecutableAdapter() {
		if (controllerMemberExecutableItemProvider == null) {
			controllerMemberExecutableItemProvider = new ControllerMemberExecutableItemProvider(this);
		}

		return controllerMemberExecutableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.WidgetElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WidgetElementItemProvider widgetElementItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.WidgetElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWidgetElementAdapter() {
		if (widgetElementItemProvider == null) {
			widgetElementItemProvider = new WidgetElementItemProvider(this);
		}

		return widgetElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.WidgetOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WidgetOptionItemProvider widgetOptionItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.WidgetOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWidgetOptionAdapter() {
		if (widgetOptionItemProvider == null) {
			widgetOptionItemProvider = new WidgetOptionItemProvider(this);
		}

		return widgetOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.Form} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FormItemProvider formItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.Form}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFormAdapter() {
		if (formItemProvider == null) {
			formItemProvider = new FormItemProvider(this);
		}

		return formItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.WidgetAttribute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WidgetAttributeItemProvider widgetAttributeItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.WidgetAttribute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWidgetAttributeAdapter() {
		if (widgetAttributeItemProvider == null) {
			widgetAttributeItemProvider = new WidgetAttributeItemProvider(this);
		}

		return widgetAttributeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link de.gulden.modeling.wave.WidgetAssociation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WidgetAssociationItemProvider widgetAssociationItemProvider;

	/**
	 * This creates an adapter for a {@link de.gulden.modeling.wave.WidgetAssociation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWidgetAssociationAdapter() {
		if (widgetAssociationItemProvider == null) {
			widgetAssociationItemProvider = new WidgetAssociationItemProvider(this);
		}

		return widgetAssociationItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (controllerItemProvider != null) controllerItemProvider.dispose();
		if (associationRelationshipItemProvider != null) associationRelationshipItemProvider.dispose();
		if (operationItemProvider != null) operationItemProvider.dispose();
		if (actionItemProvider != null) actionItemProvider.dispose();
		if (viewItemProvider != null) viewItemProvider.dispose();
		if (attributeItemProvider != null) attributeItemProvider.dispose();
		if (inheritanceRelationshipItemProvider != null) inheritanceRelationshipItemProvider.dispose();
		if (realizationRelationshipItemProvider != null) realizationRelationshipItemProvider.dispose();
		if (modelItemProvider != null) modelItemProvider.dispose();
		if (packageItemProvider != null) packageItemProvider.dispose();
		if (dependencyRelationshipItemProvider != null) dependencyRelationshipItemProvider.dispose();
		if (classItemProvider != null) classItemProvider.dispose();
		if (interfaceItemProvider != null) interfaceItemProvider.dispose();
		if (actionToViewTransitionItemProvider != null) actionToViewTransitionItemProvider.dispose();
		if (taggedValueItemProvider != null) taggedValueItemProvider.dispose();
		if (documentationItemProvider != null) documentationItemProvider.dispose();
		if (classifierMemberItemProvider != null) classifierMemberItemProvider.dispose();
		if (includeItemProvider != null) includeItemProvider.dispose();
		if (styleSheetItemProvider != null) styleSheetItemProvider.dispose();
		if (viewTransitionItemProvider != null) viewTransitionItemProvider.dispose();
		if (enumerationItemProvider != null) enumerationItemProvider.dispose();
		if (enumerationLiteralItemProvider != null) enumerationLiteralItemProvider.dispose();
		if (dictionaryItemProvider != null) dictionaryItemProvider.dispose();
		if (labelItemProvider != null) labelItemProvider.dispose();
		if (langstringItemProvider != null) langstringItemProvider.dispose();
		if (databaseTableItemProvider != null) databaseTableItemProvider.dispose();
		if (usecaseSubsystemItemProvider != null) usecaseSubsystemItemProvider.dispose();
		if (usecaseItemProvider != null) usecaseItemProvider.dispose();
		if (actorItemProvider != null) actorItemProvider.dispose();
		if (areaItemProvider != null) areaItemProvider.dispose();
		if (controllerMemberExecutableItemProvider != null) controllerMemberExecutableItemProvider.dispose();
		if (widgetElementItemProvider != null) widgetElementItemProvider.dispose();
		if (widgetOptionItemProvider != null) widgetOptionItemProvider.dispose();
		if (formItemProvider != null) formItemProvider.dispose();
		if (widgetAttributeItemProvider != null) widgetAttributeItemProvider.dispose();
		if (widgetAssociationItemProvider != null) widgetAssociationItemProvider.dispose();
	}

}
